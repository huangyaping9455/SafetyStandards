/**
 * Copyright (C), 2015-2020
 * FileName: ChineseToEnglish
 * Author:   呵呵哒
 * Date:     2020/11/16 14:27
 * Description:
 */
package org.springblade.common.tool;

import java.io.UnsupportedEncodingException;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.Set;
/**
 * @创建人 hyp
 * @创建时间 2020/11/16
 * @描述
 */
public class ChineseToEnglish {
	private static LinkedHashMap _$1 = null;

	private ChineseToEnglish() {
	}

	private static void _$1(String var0, int var1) {
		_$1.put(var0, new Integer(var1));
	}

	private static void _$1() {
		_$1("A", -20319);
		_$1("AI", -20317);
		_$1("AN", -20304);
		_$1("ANG", -20295);
		_$1("AO", -20292);
		_$1("BA", -20283);
		_$1("BAI", -20265);
		_$1("BAN", -20257);
		_$1("BANG", -20242);
		_$1("BAO", -20230);
		_$1("BEI", -20051);
		_$1("BEN", -20036);
		_$1("BENG", -20032);
		_$1("BI", -20026);
		_$1("BIAN", -20002);
		_$1("BIAO", -19990);
		_$1("BIE", -19986);
		_$1("BIN", -19982);
		_$1("BING", -19976);
		_$1("BO", -19805);
		_$1("BU", -19784);
		_$1("CA", -19775);
		_$1("CAI", -19774);
		_$1("CAN", -19763);
		_$1("CANG", -19756);
		_$1("CAO", -19751);
		_$1("CE", -19746);
		_$1("CENG", -19741);
		_$1("CHA", -19739);
		_$1("CHAI", -19728);
		_$1("CHAN", -19725);
		_$1("CHANG", -19715);
		_$1("CHAO", -19540);
		_$1("CHE", -19531);
		_$1("CHEN", -19525);
		_$1("CHENG", -19515);
		_$1("CHI", -19500);
		_$1("CHONG", -19484);
		_$1("CHOU", -19479);
		_$1("CHU", -19467);
		_$1("CHUAI", -19289);
		_$1("CHUAN", -19288);
		_$1("CHUANG", -19281);
		_$1("CHUI", -19275);
		_$1("CHUN", -19270);
		_$1("CHUO", -19263);
		_$1("CI", -19261);
		_$1("CONG", -19249);
		_$1("COU", -19243);
		_$1("CU", -19242);
		_$1("CUAN", -19238);
		_$1("CUI", -19235);
		_$1("CUN", -19227);
		_$1("CUO", -19224);
		_$1("DA", -19218);
		_$1("DAI", -19212);
		_$1("DAN", -19038);
		_$1("DANG", -19023);
		_$1("DAO", -19018);
		_$1("DE", -19006);
		_$1("DENG", -19003);
		_$1("DI", -18996);
		_$1("DIAN", -18977);
		_$1("DIAO", -18961);
		_$1("DIE", -18952);
		_$1("DING", -18783);
		_$1("DIU", -18774);
		_$1("DONG", -18773);
		_$1("DOU", -18763);
		_$1("DU", -18756);
		_$1("DUAN", -18741);
		_$1("DUI", -18735);
		_$1("DUN", -18731);
		_$1("DUO", -18722);
		_$1("E", -18710);
		_$1("EN", -18697);
		_$1("ER", -18696);
		_$1("FA", -18526);
		_$1("FAN", -18518);
		_$1("FANG", -18501);
		_$1("FEI", -18490);
		_$1("FEN", -18478);
		_$1("FENG", -18463);
		_$1("FO", -18448);
		_$1("FOU", -18447);
		_$1("FU", -18446);
		_$1("GA", -18239);
		_$1("GAI", -18237);
		_$1("GAN", -18231);
		_$1("GANG", -18220);
		_$1("GAO", -18211);
		_$1("GE", -18201);
		_$1("GEI", -18184);
		_$1("GEN", -18183);
		_$1("GENG", -18181);
		_$1("GONG", -18012);
		_$1("GOU", -17997);
		_$1("GU", -17988);
		_$1("GUA", -17970);
		_$1("GUAI", -17964);
		_$1("GUAN", -17961);
		_$1("GUANG", -17950);
		_$1("GUI", -17947);
		_$1("GUN", -17931);
		_$1("GUO", -17928);
		_$1("HA", -17922);
		_$1("HAI", -17759);
		_$1("HAN", -17752);
		_$1("HANG", -17733);
		_$1("HAO", -17730);
		_$1("HE", -17721);
		_$1("HEI", -17703);
		_$1("HEN", -17701);
		_$1("HENG", -17697);
		_$1("HONG", -17692);
		_$1("HOU", -17683);
		_$1("HU", -17676);
		_$1("HUA", -17496);
		_$1("HUAI", -17487);
		_$1("HUAN", -17482);
		_$1("HUANG", -17468);
		_$1("HUI", -17454);
		_$1("HUN", -17433);
		_$1("HUO", -17427);
		_$1("JI", -17417);
		_$1("JIA", -17202);
		_$1("JIAN", -17185);
		_$1("JIANG", -16983);
		_$1("JIAO", -16970);
		_$1("JIE", -16942);
		_$1("JIN", -16915);
		_$1("JING", -16733);
		_$1("JIONG", -16708);
		_$1("JIU", -16706);
		_$1("JU", -16689);
		_$1("JUAN", -16664);
		_$1("JUE", -16657);
		_$1("JUN", -16647);
		_$1("KA", -16474);
		_$1("KAI", -16470);
		_$1("KAN", -16465);
		_$1("KANG", -16459);
		_$1("KAO", -16452);
		_$1("KE", -16448);
		_$1("KEN", -16433);
		_$1("KENG", -16429);
		_$1("KONG", -16427);
		_$1("KOU", -16423);
		_$1("KU", -16419);
		_$1("KUA", -16412);
		_$1("KUAI", -16407);
		_$1("KUAN", -16403);
		_$1("KUANG", -16401);
		_$1("KUI", -16393);
		_$1("KUN", -16220);
		_$1("KUO", -16216);
		_$1("LA", -16212);
		_$1("LAI", -16205);
		_$1("LAN", -16202);
		_$1("LANG", -16187);
		_$1("LAO", -16180);
		_$1("LE", -16171);
		_$1("LEI", -16169);
		_$1("LENG", -16158);
		_$1("LI", -16155);
		_$1("LIA", -15959);
		_$1("LIAN", -15958);
		_$1("LIANG", -15944);
		_$1("LIAO", -15933);
		_$1("LIE", -15920);
		_$1("LIN", -15915);
		_$1("LING", -15903);
		_$1("LIU", -15889);
		_$1("LONG", -15878);
		_$1("LOU", -15707);
		_$1("LU", -15701);
		_$1("LV", -15681);
		_$1("LUAN", -15667);
		_$1("LUE", -15661);
		_$1("LUN", -15659);
		_$1("LUO", -15652);
		_$1("MA", -15640);
		_$1("MAI", -15631);
		_$1("MAN", -15625);
		_$1("MANG", -15454);
		_$1("MAO", -15448);
		_$1("ME", -15436);
		_$1("MEI", -15435);
		_$1("MEN", -15419);
		_$1("MENG", -15416);
		_$1("MI", -15408);
		_$1("MIAN", -15394);
		_$1("MIAO", -15385);
		_$1("MIE", -15377);
		_$1("MIN", -15375);
		_$1("MING", -15369);
		_$1("MIU", -15363);
		_$1("MO", -15362);
		_$1("MOU", -15183);
		_$1("MU", -15180);
		_$1("NA", -15165);
		_$1("NAI", -15158);
		_$1("NAN", -15153);
		_$1("NANG", -15150);
		_$1("NAO", -15149);
		_$1("NE", -15144);
		_$1("NEI", -15143);
		_$1("NEN", -15141);
		_$1("NENG", -15140);
		_$1("NI", -15139);
		_$1("NIAN", -15128);
		_$1("NIANG", -15121);
		_$1("NIAO", -15119);
		_$1("NIE", -15117);
		_$1("NIN", -15110);
		_$1("NING", -15109);
		_$1("NIU", -14941);
		_$1("NONG", -14937);
		_$1("NU", -14933);
		_$1("NV", -14930);
		_$1("NUAN", -14929);
		_$1("NUE", -14928);
		_$1("NUO", -14926);
		_$1("O", -14922);
		_$1("OU", -14921);
		_$1("PA", -14914);
		_$1("PAI", -14908);
		_$1("PAN", -14902);
		_$1("PANG", -14894);
		_$1("PAO", -14889);
		_$1("PEI", -14882);
		_$1("PEN", -14873);
		_$1("PENG", -14871);
		_$1("PI", -14857);
		_$1("PIAN", -14678);
		_$1("PIAO", -14674);
		_$1("PIE", -14670);
		_$1("PIN", -14668);
		_$1("PING", -14663);
		_$1("PO", -14654);
		_$1("PU", -14645);
		_$1("QI", -14630);
		_$1("QIA", -14594);
		_$1("QIAN", -14429);
		_$1("QIANG", -14407);
		_$1("QIAO", -14399);
		_$1("QIE", -14384);
		_$1("QIN", -14379);
		_$1("QING", -14368);
		_$1("QIONG", -14355);
		_$1("QIU", -14353);
		_$1("QU", -14345);
		_$1("QUAN", -14170);
		_$1("QUE", -14159);
		_$1("QUN", -14151);
		_$1("RAN", -14149);
		_$1("RANG", -14145);
		_$1("RAO", -14140);
		_$1("RE", -14137);
		_$1("REN", -14135);
		_$1("RENG", -14125);
		_$1("RI", -14123);
		_$1("RONG", -14122);
		_$1("ROU", -14112);
		_$1("RU", -14109);
		_$1("RUAN", -14099);
		_$1("RUI", -14097);
		_$1("RUN", -14094);
		_$1("RUO", -14092);
		_$1("SA", -14090);
		_$1("SAI", -14087);
		_$1("SAN", -14083);
		_$1("SANG", -13917);
		_$1("SAO", -13914);
		_$1("SE", -13910);
		_$1("SEN", -13907);
		_$1("SENG", -13906);
		_$1("SHA", -13905);
		_$1("SHAI", -13896);
		_$1("SHAN", -13894);
		_$1("SHANG", -13878);
		_$1("SHAO", -13870);
		_$1("SHE", -13859);
		_$1("SHEN", -13847);
		_$1("SHENG", -13831);
		_$1("SHI", -13658);
		_$1("SHOU", -13611);
		_$1("SHU", -13601);
		_$1("SHUA", -13406);
		_$1("SHUAI", -13404);
		_$1("SHUAN", -13400);
		_$1("SHUANG", -13398);
		_$1("SHUI", -13395);
		_$1("SHUN", -13391);
		_$1("SHUO", -13387);
		_$1("SI", -13383);
		_$1("SONG", -13367);
		_$1("SOU", -13359);
		_$1("SU", -13356);
		_$1("SUAN", -13343);
		_$1("SUI", -13340);
		_$1("SUN", -13329);
		_$1("SUO", -13326);
		_$1("TA", -13318);
		_$1("TAI", -13147);
		_$1("TAN", -13138);
		_$1("TANG", -13120);
		_$1("TAO", -13107);
		_$1("TE", -13096);
		_$1("TENG", -13095);
		_$1("TI", -13091);
		_$1("TIAN", -13076);
		_$1("TIAO", -13068);
		_$1("TIE", -13063);
		_$1("TING", -13060);
		_$1("TONG", -12888);
		_$1("TOU", -12875);
		_$1("TU", -12871);
		_$1("TUAN", -12860);
		_$1("TUI", -12858);
		_$1("TUN", -12852);
		_$1("TUO", -12849);
		_$1("WA", -12838);
		_$1("WAI", -12831);
		_$1("WAN", -12829);
		_$1("WANG", -12812);
		_$1("WEI", -12802);
		_$1("WEN", -12607);
		_$1("WENG", -12597);
		_$1("WO", -12594);
		_$1("WU", -12585);
		_$1("XI", -12556);
		_$1("XIA", -12359);
		_$1("XIAN", -12346);
		_$1("XIANG", -12320);
		_$1("XIAO", -12300);
		_$1("XIE", -12120);
		_$1("XIN", -12099);
		_$1("XING", -12089);
		_$1("XIONG", -12074);
		_$1("XIU", -12067);
		_$1("XU", -12058);
		_$1("XUAN", -12039);
		_$1("XUE", -11867);
		_$1("XUN", -11861);
		_$1("YA", -11847);
		_$1("YAN", -11831);
		_$1("YANG", -11798);
		_$1("YAO", -11781);
		_$1("YE", -11604);
		_$1("YI", -11589);
		_$1("YIN", -11536);
		_$1("YING", -11358);
		_$1("YO", -11340);
		_$1("YONG", -11339);
		_$1("YOU", -11324);
		_$1("YU", -11303);
		_$1("YUAN", -11097);
		_$1("YUE", -11077);
		_$1("YUN", -11067);
		_$1("ZA", -11055);
		_$1("ZAI", -11052);
		_$1("ZAN", -11045);
		_$1("ZANG", -11041);
		_$1("ZAO", -11038);
		_$1("ZE", -11024);
		_$1("ZEI", -11020);
		_$1("ZEN", -11019);
		_$1("ZENG", -11018);
		_$1("ZHA", -11014);
		_$1("ZHAI", -10838);
		_$1("ZHAN", -10832);
		_$1("ZHANG", -10815);
		_$1("ZHAO", -10800);
		_$1("ZHE", -10790);
		_$1("ZHEN", -10780);
		_$1("ZHENG", -10764);
		_$1("ZHI", -10587);
		_$1("ZHONG", -10544);
		_$1("ZHOU", -10533);
		_$1("ZHU", -10519);
		_$1("ZHUA", -10331);
		_$1("ZHUAI", -10329);
		_$1("ZHUAN", -10328);
		_$1("ZHUANG", -10322);
		_$1("ZHUI", -10315);
		_$1("ZHUN", -10309);
		_$1("ZHUO", -10307);
		_$1("ZI", -10296);
		_$1("ZONG", -10281);
		_$1("ZOU", -10274);
		_$1("ZU", -10270);
		_$1("ZUAN", -10262);
		_$1("ZUI", -10260);
		_$1("ZUN", -10256);
		_$1("ZUO", -10254);
	}

	public static int getCnAscii(char var0) {
		byte[] var1 = null;

		try {
			var1 = String.valueOf(var0).getBytes("GBK");
		} catch (UnsupportedEncodingException var5) {
			var5.printStackTrace();
		}

		if (var1 != null && var1.length <= 2 && var1.length > 0) {
			if (var1.length == 1) {
				return var1[0];
			} else if (var1.length == 2) {
				int var2 = 256 + var1[0];
				int var3 = 256 + var1[1];
				int var4 = 256 * var2 + var3 - 65536;
				return var4;
			} else {
				return 0;
			}
		} else {
			return 0;
		}
	}

	public static String getSpellByAscii(int var0) {
		if (var0 > 0 && var0 < 160) {
			return String.valueOf((char)var0);
		} else if (var0 >= -20319 && var0 <= -10247) {
			Set var1 = _$1.keySet();
			Iterator var2 = var1.iterator();
			String var3 = null;
			String var4 = null;
			int var5 = -20319;

			while(var2.hasNext()) {
				var4 = (String)var2.next();
				Object var7 = _$1.get(var4);
				if (var7 instanceof Integer) {
					int var6 = (Integer)var7;
					if (var0 >= var5 && var0 < var6) {
						return var3 == null ? var4 : var3;
					}

					var3 = var4;
					var5 = var6;
				}
			}

			return null;
		} else {
			return null;
		}
	}

	public static String getFullSpell(String var0) {
		if (null != var0 && !"".equals(var0.trim())) {
			char[] var1 = var0.toCharArray();
			StringBuffer var2 = new StringBuffer();
			int var3 = 0;

			for(int var4 = var1.length; var3 < var4; ++var3) {
				int var5 = getCnAscii(var1[var3]);
				if (var5 == 0) {
					var2.append(var1[var3]);
				} else {
					String var6 = getSpellByAscii(var5);
					if (var6 == null) {
						var2.append(var1[var3]);
					} else {
						var2.append(var6).append(" ");
					}
				}
			}

			return var2.toString();
		} else {
			return var0;
		}
	}

	static {
		if (_$1 == null) {
			_$1 = new LinkedHashMap(500);
		}

		_$1();
	}
}
